@* @using System.ComponentModel *@
@* @using Tessa.Models.Filesystem.Directory *@
@* @using Tessa.Models.Filesystem.Directory.ResultTypes *@
@* @using Tessa.Models.Filesystem.File *@
@* @using Tessa.Models.Filesystem.File.ResultTypes *@
@* @using Tessa.Utilities.Result *@
@* *@
@* @inject IFileService _FileService *@
@* @inject IDirectoryService _DirectoryService *@
@* @inject IJSRuntime JsRuntime *@
@* *@
@* <div id="@_itemIndex" class="w-full pt-2 bg-gray-50 hover:bg-slate-100 border border-gray-200 rounded-2xl shadow dark:bg-gray-800 dark:border-gray-700"> *@
@*     <div class="flex justify-end px-4 pt-3 mb-3"> *@
@*         <button id=@_dropdownButtonIndex data-dropdown-toggle=@_dropdownElementIndex class="inline-block text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:ring-4 focus:outline-none focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-1.5" type="button"> *@
@*             <span class="sr-only">Open dropdown</span> *@
@*             <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 3"> *@
@*                 <path d="M2 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm6.041 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM14 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Z"/> *@
@*             </svg> *@
@*         </button> *@
@*         <!-- Dropdown menu --> *@
@*         <div id=@_dropdownElementIndex class="z-10 hidden text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700"> *@
@*             <ul class="py-2" aria-labelledby=@_dropdownButtonIndex> *@
@*                 <li> *@
@*                     <button @onclick="@RenameCallback" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Rename</button> *@
@*                 </li> *@
@*                 <li> *@
@*                     <button @onclick="@DeleteCallback" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Delete</button> *@
@*                 </li> *@
@*                 <li> *@
@*                     <button @onclick="@DownloadCallback" class="block px-4 py-2 text-sm text-red-600 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Download</button> *@
@*                 </li> *@
@*             </ul> *@
@*         </div> *@
@*     </div> *@
@*     <div class="flex flex-col items-center pb-10"> *@
@*         <img class="w-24 h-24 mb-3 bg-gray-50" src=@IconBase64 alt=@Name/> *@
@*         <p class=" px-4 mb-1 text-xl text-center line-clamp-3 w-full h-full text-wrap font-medium text-gray-900 dark:text-white">@Name</p> *@
@*         $1$ <div class="flex mt-4 md:mt-6"> #1# *@
@*         $1$     <a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Add friend</a> #1# *@
@*         $1$     <a href="#" class="py-2 px-4 ms-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">Message</a> #1# *@
@*         $1$ </div> #1# *@
@*     </div> *@
@* </div> *@
@* *@
@* *@
@* @code { *@
@*     [Parameter]  *@
@*     public int Index { get; set; } *@
@*     [Parameter] *@
@*     public string Name { get; set; } *@
@*     [Parameter] *@
@*     public string Path { get; set; } *@
@*     [Parameter] *@
@*     public string IconBase64 { get; set; } *@
@*     [Parameter] *@
@*     public EventCallback Remove { get; set; } *@
@* *@
@*     private string _dropdownButtonIndex; *@
@*     private string _dropdownElementIndex; *@
@*     private string _itemIndex; *@
@*      *@
@*     public override async Task SetParametersAsync(ParameterView parameters) *@
@*     { *@
@*         await base.SetParametersAsync(parameters); *@
@*         _dropdownButtonIndex = $"dropdownButton{Index.ToString()}"; *@
@*         _dropdownElementIndex = $"dropdownElement{Index.ToString()}"; *@
@*         _itemIndex = $"item{Index.ToString()}"; *@
@*         @if(Name.Length > 20) *@
@*         { *@
@*             Name = $"{Name[0..20]}..."; *@
@*         } *@
@*     } *@
@* *@
@*     private void RenameCallback(MouseEventArgs obj) *@
@*     { *@
@*     } *@
@* *@
@*     private async Task DeleteCallback(MouseEventArgs obj) *@
@*     { *@
@*         DeleteDirectoryResultType local; *@
@*         bool success; *@
@*         if (Path[^1] == '/') *@
@*         { *@
@*             Result<DeleteDirectoryResultType> result = await _DirectoryService.DeleteAsync(Path); *@
@*             if (result.TryGetResult(out DeleteDirectoryResultType returnCode)) *@
@*             { *@
@*                 local = returnCode; *@
@*             } *@
@*         } *@
@*         else *@
@*         { *@
@*             Result<DeleteFileResultType> result =  await _FileService.DeleteAsync(Path); *@
@*             if (result.TryGetResult(out DeleteFileResultType returnCode)) *@
@*             { *@
@*                 local *@
@*             } *@
@*         } *@
@* *@
@*         if (success) *@
@*         { *@
@*             await JsRuntime.InvokeVoidAsync("removeById", _itemIndex); *@
@*         } *@
@*     } *@
@* *@
@*     private void DownloadCallback(MouseEventArgs obj) *@
@*     { *@
@*         int a = 0; *@
@*     } *@
@* *@
@* } *@