@page "/login"
@using Tessa.Components.Layout
@using Tessa.Models.User
@using Tessa.Models.User.ResultTypes
@using Tessa.Utilities.Result
@inject IUserService _UserService
@inject NavigationManager _NavigationManager
@layout EmptyLoginLayout
<body class="bg-white rounded-lg">
    <div class="container flex flex-col mx-auto bg-white rounded-lg pt-6 my-5">
        <div class="flex justify-center w-full h-full my-auto xl:gap-14 lg:justify-normal md:gap-5 draggable">
            <div class="flex items-center justify-center w-full lg:p-12">
                <div class="flex items-center xl:p-10">
                    <EditForm class="flex flex-col w-full h-full pb-6 text-center bg-white rounded-3xl" 
                              id="LoginForm" method="post" FormName="LoginForm" Model="_loginDto" OnSubmit="LoginCallback" >
                        <h3 class="mb-3 text-4xl font-extrabold text-dark-grey-900">Ready to share some?</h3>
                        @if (errorMessage != null)
                        {
                            <p class="mb-1 text-red-700">@errorMessage</p>
                        }
                        <p class="mb-4 text-grey-700">Enter your email and password</p>
                        <a class="flex items-center justify-center w-full py-4 mb-6 text-sm font-medium transition duration-300 rounded-2xl text-grey-900 bg-grey-300 hover:bg-grey-400 focus:ring-4 focus:ring-grey-300">
                            <img class="h-5 mr-2" src="https://raw.githubusercontent.com/Loopple/loopple-public-assets/main/motion-tailwind/img/logos/logo-google.png" alt="">
                            Sign in with Google
                        </a>
                        <div class="flex items-center mb-3">
                            <hr class="h-0 border-b border-solid border-grey-500 grow">
                            <p class="mx-4 text-grey-600">or</p>
                            <hr class="h-0 border-b border-solid border-grey-500 grow">
                        </div>
                        <label for="username" class="mb-2 text-sm text-start text-grey-900">Username*</label>
                        <InputText class="flex items-center w-full px-5 py-4 mr-2 text-sm font-medium outline-none focus:bg-grey-400 mb-5 placeholder:text-grey-700 bg-grey-200 text-dark-grey-900 rounded-2xl" 
                                   id="username" type="username" placeholder="Enter a username" @bind-Value="_loginDto.Username"/>
                        <label for="password" class="mb-2 text-sm text-start text-grey-900">Password*</label>
                        <InputText class="flex items-center w-full px-5 py-4 mb-5 mr-2 text-sm font-medium outline-none focus:bg-grey-400 placeholder:text-grey-700 bg-grey-200 text-dark-grey-900 rounded-2xl"
                                   id="password" type="password" placeholder="Enter a password" @bind-Value="_loginDto.Password"/>
                        <div class="flex flex-row justify-between mb-8">
                            <label class="relative inline-flex items-center mr-3 cursor-pointer select-none">
                                <input type="checkbox" checked value="" class="sr-only peer">
                                <div
                                    class="w-5 h-5 bg-white border-2 rounded-sm border-grey-500 peer peer-checked:border-0 peer-checked:bg-purple-blue-500">
                                    <img class="" src="https://raw.githubusercontent.com/Loopple/loopple-public-assets/main/motion-tailwind/img/icons/check.png" alt="tick">
                                </div>
                                <span class="ml-3 text-sm font-normal text-grey-900">Keep me logged in</span>
                            </label>
                            <a href="javascript:void(0)" class="mr-4 text-sm font-medium text-purple-blue-500">Forget password?</a>
                        </div>
                        <button type="submit" class="w-full px-6 py-5 mb-5 text-sm font-bold leading-none text-white transition duration-300 md:w-96 rounded-2xl hover:bg-purple-blue-600 focus:ring-4 focus:ring-purple-blue-100 bg-purple-blue-500">Sign In</button>
                        <p class="text-sm leading-relaxed text-grey-900">
                            Not registered yet?
                            <NavLink href="/register" class="font-bold text-grey-700">
                                Create an Account
                            </NavLink>
                        </p>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</body>
@code {
    [SupplyParameterFromForm]
    private LoginDto _loginDto { get; set; } = new();
    
    private Result<LoginUserResultType> _result;
    private string? errorMessage = null;
    
    private async Task LoginCallback()
    {
        _result = await _UserService.LoginAsync(_loginDto);
        if (_result.TryGetResult( out LoginUserResultType code))
        {
            if (code == LoginUserResultType.Ok)
            {
                _NavigationManager.NavigateTo("/");
            }
            else
            {
                errorMessage = ResultToMessage(code);
            }
        }
    }

    private static string ResultToMessage(LoginUserResultType code) =>
        code switch
        {
            LoginUserResultType.Null => "Error occured, data null.",
            LoginUserResultType.InvalidUsernameChars => "Invalid characters used.",
            LoginUserResultType.PasswordLength => "Password does not meet length requirements.",
            LoginUserResultType.NoMatch => "Invalid credentials. User not found.",
            LoginUserResultType.Ok => "",
            _ => "Server error."
        };

}